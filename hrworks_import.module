<?php
/**
 * Implements hook_feeds_processor_targets_alter().
 */
function hrworks_import_feeds_processor_targets_alter(&$targets, $type, $bundle) {
  if ($type == 'node' && $bundle == 'hrworks_article') {
    // this is where we fill in the Publish Date stuffs
    $targets['published_at'] = array(
      'name' => t('Published At'),
      'description' => t('When the article was actually published, instead of created'),
      'callback' => 'hrworks_import_set_target',
    );
  }
}


/**
 * Mapping callback.
 */
function hrworks_import_set_target($source, $entity, $target, $value, $mapping) {

  // turn the UTC string into a unix timestamp
  $publishedAt = strtotime($value['0']);

  // save the value to the entity
  $entity->published_at = $publishedAt;
}



/**
 * Hook node insert. This will automagically set URL redirrects for a node
 */
function hrworks_import_node_insert($node) {
  if ($node->type == 'hrworks_article' && isset($node->field_old_url)) {
    // Use Database API to retrieve current redirect sources.
    $query = db_select('redirect', 'r');
    $query->fields('r', array('source'));
    $redirect_sources = $query->execute()->fetchCol();

    // The old path
    $url = $node->field_old_url['und'][0]['value'];

    // Check node id exists and there is no current redirect set for it
    if (isset($node->nid) && (!in_array($url, $redirect_sources))){
      $redirect = new stdClass();

      module_invoke(
        'redirect',
        'object_prepare',
        $redirect,
        array(
          'source' => $url,
          'source_options' => array(),
          'redirect' => 'node/' . $node->nid,
          'redirect_options' => array(),
          'language' => LANGUAGE_NONE,
        )
      );

      module_invoke('redirect', 'save', $redirect);
    }
  }
}
